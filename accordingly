Map<String,Map<String,String>> data = getTranslationsData("trnOrdersParams");
StringBuilder stringInsertFabricLuParam = new StringBuilder().append("insert or replace into orders_params (IID, ");
String prefix = "";
StringBuilder sqlInsertBind = new StringBuilder().append(" values ( ? ,");
String IID = ludb().fetch("SELECT IID('ORDERS')").firstValue().toString();

reportUserMessage("fnEnrichmentOrderParam- number of parameters in the trnOrdersParams: " + data.size());

// Check if we have elements in the Translation object
if(data.size() > 0){

   //Parameters that will be used for Update. The size of this array needs to be the number of parameters + 1 for the IID field
   Object[] params = new Object[data.size()+ 1];
   // Populate the IID in the first position on params array
params[0] = IID;

   //Counter to insert the parameters in the correct position. Start the counter by 1, since the first position (0) is populated by the IID
    int i=1;

   //Getting the values from the LU
   prefix = "";
   for(String index: data.keySet()) {
	  //String which contains the values returned by the query
	  StringBuilder values = new StringBuilder();

	  Map<String, String> valMap = data.get(index);
	  String luParamColName = valMap.get("PARAM_NAME");

	  // Get the SQL query for each parameter
	  String sql = valMap.get("SQL");

	  //Check if SQL query contains distinct and add it if not
	  if (!sql.contains("distinct")) {
		  sql = sql.replace("select", "select distinct");
	  }

	  stringInsertFabricLuParam.append(prefix + luParamColName);
	  values.append("{"); 

	  //Run the SQL statement on the LU
	  Db.Rows rows = ludb().fetch(sql);
	  	
	  for (Db.Row row : rows) {
		  if (row.cell(0) != null)
			  values.append("\"" + row.cell(0) + "\",");
	  }

	  //Check if the last element is a comma and remove it
	  if (values.lastIndexOf(",") == values.length() - 1) {
		  values.deleteCharAt(values.lastIndexOf(","));
	  }
	  values.append("}");
	  //If no values, set NULL
	  if (values.toString().equals("{}")) {
		  params[i] = null;
	  } else {
		  params[i] = values.toString();
	  }
	  sqlInsertBind.append(prefix + " ? ");
	  i++;

	  prefix = ",";
  } // close the loop of the translation

 stringInsertFabricLuParam.append(") ");
 sqlInsertBind.append(") ");

//reportUserMessage("stringInsertFabricLuParam: " + stringInsertFabricLuParam.toString() + ",sqlInsertBind: " + sqlInsertBind.toString());	
 // Insert a new record to ORDERS_PARAM
 String insertSQL = stringInsertFabricLuParam.append(sqlInsertBind).toString();
 reportUserMessage("Insert SQL: " + insertSQL + ", parameters:  " + Arrays.toString(params));
  ludb().execute(insertSQL, params);
} // end if the translation is populated
else {//no parameters defined - inserting only entity_id and source_environment values
       ludb().execute("insert or replace into ORDERS_PARAMS (IID) values (?)", IID);
}
